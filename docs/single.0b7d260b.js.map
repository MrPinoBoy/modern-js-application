{"version":3,"sources":["node_modules/regenerator-runtime/runtime.js","resources/javascript/index.js","resources/javascript/single.js"],"names":["updatedName","document","getElementById","updatedSmallDescription","updatedLongDescription","template","mainHtmlSection","preview","loadingAnimation","loadingAnimationElement","readyState","style","display","bonjour","fetchChar","databaseToFetch","fetch","converterToJson","rawChar","json","cardDisplayer","characters","forEach","character","clone","content","cloneNode","documentName","documentShortDescription","documentImage","documentForm","innerHTML","name","shortDescription","setAttribute","image","id","appendChild","searchCard","allCards","searchBar","card","seeCharacterButton","children","cardIdLong","getAttribute","split","cardId","characterName","toLowerCase","includes","value","informationPlacer","targetImage","targetName","targetSmallDesc","targetLongDesc","characterInfos","description","deleteCharacter","characterId","method","headers","alert","readImage","file","type","startsWith","console","log","previewText","reader","FileReader","addEventListener","imageDataUrl","result","src","opacity","imageUrlSeparator","readAsDataURL","newCharInfoInputer","newName","newSmallDescription","newLongDescription","textContent","postNewData","body","JSON","stringify","autoResize","height","scrollHeight","retrievedInfoDisplayer","updatedCharacter","postUpdatedData","updatedCharInfoInputer","letterCounter","targetDisplayer","targetTextInput","length","maxLength","img","smallDescription","longDescription","idSplitter","window","location","hash","currentId","deleteButton","updateButton","database","confirm","href"],"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","file":"single.0b7d260b.js","sourceRoot":"..","sourcesContent":["/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  define(Gp, \"constructor\", GeneratorFunctionPrototype);\n  define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","import \"regenerator-runtime/runtime\";\nconst updatedName = document.getElementById(\"update-character-name\");\nconst updatedSmallDescription = document.getElementById(\n  \"update-character-small-description\"\n);\nconst updatedLongDescription = document.getElementById(\n  \"update-character-long-description\"\n);\nconst template = document.getElementById(\"tpl-character\");\nconst mainHtmlSection = document.getElementById(\"target\");\nconst preview = document.getElementById(\"character-image-preview\");\nexport const loadingAnimation = (loadingAnimationElement) => {\n  if (document.readyState === \"complete\") {\n    loadingAnimationElement.style.display = \"none\";\n  }\n};\nexport const bonjour = \"bonjour\";\nexport const fetchChar = async (databaseToFetch) => {\n  //on crée une fonction async (pour pouvoir utiliser await)\n  return await fetch(databaseToFetch); // on va chercher les données et on utilise await parce que fetch prend plus de temps pour télécharger qu'il n'en faut au code pour passer a la ligne suivante\n};\n\nexport const converterToJson = async (rawChar) => {\n  return await rawChar.json(); //on convertit les données en un objet json et encore une fois on utilise await car la conversion prend plus de temps\n};\n\nexport const cardDisplayer = async (characters) => {\n  await characters.forEach((character) => {\n    const clone = template.content.cloneNode(true);\n    const documentName = clone.getElementById(\"character-name\");\n    const documentShortDescription = clone.getElementById(\n      \"character-small-description\"\n    );\n    const documentImage = clone.getElementById(\"character-img\");\n    const documentForm = clone.getElementById(\"formGet\");\n    documentName.innerHTML = character.name;\n    documentShortDescription.innerHTML = character.shortDescription;\n    documentImage.setAttribute(\n      \"src\",\n      `data:image/jpeg;base64,${character.image}`\n    ); //on définit l'attribut \"src\" de l'image en ajoutant \"data:image/jpeg;base64,\" (qui permet d'afficher l'url fourni dans l'objet) suivi de l'url fourni dans l'objet (data[0].image)\n    documentForm.setAttribute(\"action\", `pages/single.html#${character.id}`); //l'url du lien contient l'id du personnage arpès un #, pour qu'on puisse aller le rechercer sur la page single\n    mainHtmlSection.appendChild(clone);\n  });\n};\n// export const templateCloner = (template) => {\n//   return [\n//     clone,\n//     documentName,\n//     documentShortDescription,\n//     documentImage,\n//     documentForm,\n//   ];\n// };\n\n// export const informationIntoHtml = (character) => {\n//   documentName.innerHTML = character.name;\n//   documentShortDescription.innerHTML = character.shortDescription;\n//   documentImage.setAttribute(\n//     \"src\",\n//     `data:image/jpeg;base64,${character.image}`\n//   ); //on définit l'attribut \"src\" de l'image en ajoutant \"data:image/jpeg;base64,\" (qui permet d'afficher l'url fourni dans l'objet) suivi de l'url fourni dans l'objet (data[0].image)\n//   documentForm.setAttribute(\"action\", `pages/single.html#${character.id}`); //l'url du lien contient l'id du personnage arpès un #, pour qu'on puisse aller le rechercer sur la page single\n// };\n\n// export const characterCardMaker = async (charactersObject, containingDiv) => {\n//   await charactersObject.forEach((character) => {\n//     let clone = template.content.cloneNode(true);\n//     let documentName = clone.getElementById(\"character-name\");\n//     let documentShortDescription = clone.getElementById(\n//       \"character-small-description\"\n//     );\n//     let documentImage = clone.getElementById(\"character-img\");\n//     let documentForm = clone.getElementById(\"formGet\");\n//     informationIntoHtml(character);\n//     containingDiv.appendChild(clone);\n//   });\n// };\n\nexport const searchCard = (allCards, searchBar) => {\n  //we hide a card if its name and id doesn't correspond to the search parameter\n  for (let card of allCards) {\n    let seeCharacterButton = card.children[1]; //whatever contains the id in the card\n    let cardIdLong = seeCharacterButton.getAttribute(\"action\").split(\"#\");\n    let cardId = cardIdLong[1]; //cardIdLong is an array, the id is at index = 1\n    let characterName = card.children[0].children[1].innerHTML; //whatever contains the name in the card\n    if (\n      !characterName.toLowerCase().includes(searchBar.value.toLowerCase()) &&\n      !cardId.toLowerCase().includes(searchBar.value.toLowerCase())\n    ) {\n      card.style.display = \"none\";\n    } else {\n      card.style.display = \"flex\";\n    }\n  }\n};\n\nexport const informationPlacer = (\n  targetImage,\n  targetName,\n  targetSmallDesc,\n  targetLongDesc,\n  characterInfos\n) => {\n  targetImage.setAttribute(\n    \"src\",\n    `data:image/jpeg;base64,${characterInfos.image}`\n  ); // pour les img il faut changer la src d'où setAttribute, `data:image/jpeg;base64,${data.image}` convertir un url de données en images\n  targetName.innerHTML = characterInfos.name;\n  targetSmallDesc.innerHTML = characterInfos.shortDescription;\n  targetLongDesc.innerHTML = characterInfos.description;\n};\n\nexport const deleteCharacter = async (characterId, characterName) => {\n  await fetch(\n    `https://character-database.becode.xyz/characters/${characterId}`,\n    {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    }\n  );\n  alert(`${characterName} has been deleted`);\n};\n\nexport const readImage = async (file, character) => {\n  // Check if the file is an image.\n  if (file.type && !file.type.startsWith(\"image/\")) {\n    console.log(\"File is not an image.\", file.type, file);\n    return;\n  }\n\n  const preview = document.getElementById(\"character-image-preview\");\n  const previewText = document.getElementById(\"preview-text\");\n  const reader = new FileReader(); //lis le contenu d'un fichier\n  reader.addEventListener(\"load\", () => {\n    const imageDataUrl = reader.result;\n    preview.src = imageDataUrl;\n    previewText.style.opacity = 0;\n    const imageUrlSeparator = imageDataUrl.split(\",\");\n    character.image = imageUrlSeparator[1];\n  });\n  reader.readAsDataURL(file);\n};\n\nexport const newCharInfoInputer = (character) => {\n  const newName = document.getElementById(\"input-character-name\");\n  const newSmallDescription = document.getElementById(\n    \"input-character-small-description\"\n  );\n  const newLongDescription = document.getElementById(\n    \"input-character-long-description\"\n  );\n  character.name = newName.value;\n  character.shortDescription = newSmallDescription.value;\n  character.description = newLongDescription.children[0].textContent;\n};\n\nexport const postNewData = async (character) => {\n  await fetch(\"https://character-database.becode.xyz/characters\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      id: null,\n      name: character.name,\n      shortDescription: character.shortDescription,\n      description: character.description,\n      image: character.image,\n    }),\n  });\n};\n\nexport function autoResize() {\n  this.style.height = \"auto\";\n  this.style.height = this.scrollHeight + \"px\";\n}\n\nexport const retrievedInfoDisplayer = (character, updatedCharacter) => {\n  updatedName.value = character.name;\n  updatedSmallDescription.value = character.shortDescription;\n  updatedLongDescription.children[0].textContent = character.description;\n  preview.src = `data:image/jpeg;base64,${character.image}`;\n  updatedCharacter.image = character.image;\n};\n\nexport const postUpdatedData = async (characterId, character) => {\n  await fetch(\n    `https://character-database.becode.xyz/characters/${characterId}`,\n    {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        name: character.name,\n        shortDescription: character.shortDescription,\n        description: character.description,\n        image: character.image,\n      }),\n    }\n  );\n};\n\nexport const updatedCharInfoInputer = (character) => {\n  character.name = updatedName.value;\n  character.shortDescription = updatedSmallDescription.value;\n  character.description = updatedLongDescription.children[0].textContent;\n};\n\nexport const letterCounter = (targetDisplayer, targetTextInput) => {\n  targetDisplayer.innerHTML = `${targetTextInput.value.length} on max ${targetTextInput.maxLength} char.`;\n};\n","import {\n  converterToJson,\n  fetchChar,\n  informationPlacer,\n  deleteCharacter,\n} from \"./index.js\";\n\n(async () => {\n  const img = document.getElementById(\"character-img\");\n  const name = document.getElementById(\"character-name\");\n  const smallDescription = document.getElementById(\n    \"character-small-description\"\n  );\n  const longDescription = document.getElementById(\"character-long-description\");\n  const idSplitter = window.location.hash.split(\"#\");\n  const currentId = idSplitter[1]; // on va chercher une information dans l'url, à partir du #, et split sert à se débarasser du #\n  const deleteButton = document.getElementById(\"button-character-delete\");\n  const updateButton = document.getElementById(\"button-character-update\");\n  const database = `https://character-database.becode.xyz/characters/${currentId}`;\n\n  let rawChar = await fetchChar(database);\n  let character = await converterToJson(rawChar);\n  informationPlacer(img, name, smallDescription, longDescription, character);\n\n  deleteButton.addEventListener(\"click\", async () => {\n    if (\n      confirm(`Are you sure you want to delete ${name.innerHTML} forever ?`)\n    ) {\n      await deleteCharacter(currentId, name.innerHTML);\n      document.location.href = \"../index.html\";\n    }\n  });\n\n  updateButton.addEventListener(\"click\", () => {\n    document.location.href = `update.html#${currentId}`;\n  });\n})();\n"]}